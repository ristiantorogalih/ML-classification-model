p_female <- 32/(77+32)
p_male <- 17/(74+17)
# odds
o_female <-
o_male <-
# log of odds
log(o_female/o_male)
# peluang
p_female <- 32/(77+32)
p_male <- 17/(74+17)
# odds
o_female <- p_female/(1-p_female)
o_male <-
# log of odds
log(o_female/o_male)
# peluang
p_female <- 32/(77+32)
p_male <- 17/(74+17)
# odds
o_female <- p_female/(1-p_female)
o_male <-  p_male/(1-p_male)
# log of odds
log(o_female/o_male)
log(o_male)
# odds female dapat honors
exp(log(o_female))
# odds female dapat honors
exp(log(o_female/o_male))
honors.logit3 <- glm(formula = hon ~ math, data = honors, family = "binomial")
summary(honors.logit3)
`hon = -9.79394 + 0.15634 * math`
# hint: substitusi formula model saja
# log of odds
hon52 <- -9.79394 + 0.15634 * 52
hon53 <- -9.79394 + 0.15634 * 53
hon53-hon52
# log of odds -> odds
exp(0.15634)
honors.logit4 <- glm(formula = hon ~ math+math, data = honors, family = "binomial")
summary(honors.logit4)
honors.logit4 <- glm(formula = hon ~ math+female, data = honors, family = "binomial")
summary(honors.logit4)
# female
exp(0.96531)
# math
exp(0.16422)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>")
options(scipen = 9999)
# library
library(dplyr)
lo_husain
# log of odds
lo_husain <- -10.80595 + 0.96531 * 0 + 0.16422 * 60
lo_husain
# peluang
inv.logit(lo_husain)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>")
options(scipen = 9999)
# library
library(dplyr)
# peluang lulus
24/30
# peluang tidak lulus
(30-24)/30
# tentukan kelas
ifelse(0.8 > 0.5, "LULUS", "TIDAK LULUS")
# peluang = 0.8
# peluang tidak lulus = 0.2
# odds
0.8/0.2
# peluang
p <- (100-25)/100
# odds
p/(1-p) #0.75/0.25
# odds: p/1-p
# min
0/(1-0)
# max
1/(1-1)
# log of odds - lulus kuis
log(4)
# log of odds - pesawat on time
log(3)
# min
log(0/(1-0))
# max
log(1/(1-1))
# log of odds -> odds
odds <- exp(1.386294) # untuk merubah nilai log ke nilai aslinya bisa menggunakan exponen
odds
# odds -> peluang dengan `odds/(odds+1)`
odds/(odds+1)
library(gtools)
# peluang -> log of odds dengan `logit()`
logit(0.8)
# log of odds -> peluang dengan `inv.logit()`
inv.logit(1.386294)
# sigmoid function
curve(inv.logit(x), from = -10, to = 10,
xlab = "Log of Odds",
ylab = "Peluang")
# read & inspect data
honors <- read.csv("data_input/sample.csv") %>%
select(-femalexmath)
glimpse(honors)
# cek missing value
anyNA(honors)
colSums(is.na(honors))
# utk klasifikasi, target variable harus bertipe factor
# data wrangling base
honors$hon <- as.factor(honors$hon)
honors$female <- as.factor(honors$female)
library(dplyr) # memudahkan data wrangling/pre-processing/cleaning
# piping untuk menyambungkan proses, shortcut: ctrl + shift m
honors <- honors %>%
# mengubah tipe data/isi kolom
mutate(hon = as.factor(hon),
female = as.factor(female))
str(honors)
# generalized linear model
honors.logit <- glm(formula = hon ~ 1, # satu, karena tanpa prediktor
data = honors,
family = "binomial") # karena prediksi biner (2 kelas)
summary(honors.logit)
# peluang
table(honors$hon)
# log of odds student honors
logit(49/(151+49))
# log of odds -> odds
exp(-1.12546)
honors.logit2 <- glm(formula = hon ~ female, data = honors, family = "binomial")
summary(honors.logit2)
# proportion
table(female = honors$female, honors = honors$hon)
# peluang
p_female <- 32/(77+32)
p_male <- 17/(17+74)
# odds
o_female <- p_female/(1-p_female)
o_male <- p_male/(1-p_male)
# log of odds
log(o_female/o_male)
log(o_male)
# odds female dapat honors
exp(0.5928)
honors.logit3 <- glm(formula = hon ~ math, data = honors, family = "binomial")
summary(honors.logit3)
# hint: substitusi formula model saja
# log of odds
hon52 <- -9.79394 + 0.15634 * 52
hon53 <- -9.79394 + 0.15634 * 53
hon53-hon52 # ini masih log of odds
# log of odds -> odds
exp(0.15634)
honors.logit4 <- glm(hon ~ female + math, data = honors, family = "binomial")
summary(honors.logit4)
# female
exp(0.96531)
# math
exp(0.16422)
# log of odds
lo_husain <- -10.80595 + 0.96531 * 0 + 0.16422 * 60
lo_husain
# peluang
inv.logit(lo_husain)
# log of odds
lo_nabilah <- -10.80595 + 0.96531 * 1 + 0.16422 * 80
lo_nabilah
# peluang
inv.logit(lo_nabilah)
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 70))>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 70)>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 65)>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 66)>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 67)>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 68)>0.5,"LULUS","TIDAK")
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 69)>0.5,"LULUS","TIDAK")
summary(honors.logit4)
# clear-up the environment
rm(list = ls())
# chunk options
knitr::opts_chunk$set(
message = FALSE,
warning = FALSE,
fig.align = "center",
comment = "#>")
options(scipen = 9999)
# library
library(dplyr)
# peluang lulus
24/30
# peluang tidak lulus
(30-24)/30
# tentukan kelas
ifelse(0.8 > 0.5, "LULUS", "TIDAK LULUS")
# peluang = 0.8
# peluang tidak lulus = 0.2
# odds
0.8/0.2
# peluang
p <- (100-25)/100
# odds
p/(1-p) #0.75/0.25
# odds: p/1-p
# min
0/(1-0)
# max
1/(1-1)
# log of odds - lulus kuis
log(4)
# log of odds - pesawat on time
log(3)
# min
log(0/(1-0))
# max
log(1/(1-1))
# log of odds -> odds
odds <- exp(1.386294) # untuk merubah nilai log ke nilai aslinya bisa menggunakan exponen
odds
# odds -> peluang dengan `odds/(odds+1)`
odds/(odds+1)
library(gtools)
# peluang -> log of odds dengan `logit()`
logit(0.8)
# log of odds -> peluang dengan `inv.logit()`
inv.logit(1.386294)
# sigmoid function
curve(inv.logit(x), from = -10, to = 10,
xlab = "Log of Odds",
ylab = "Peluang")
# read & inspect data
honors <- read.csv("data_input/sample.csv") %>%
select(-femalexmath)
glimpse(honors)
# cek missing value
anyNA(honors)
colSums(is.na(honors))
# utk klasifikasi, target variable harus bertipe factor
# data wrangling base
honors$hon <- as.factor(honors$hon)
honors$female <- as.factor(honors$female)
library(dplyr) # memudahkan data wrangling/pre-processing/cleaning
# piping untuk menyambungkan proses, shortcut: ctrl + shift m
honors <- honors %>%
# mengubah tipe data/isi kolom
mutate(hon = as.factor(hon),
female = as.factor(female))
str(honors)
# generalized linear model
honors.logit <- glm(formula = hon ~ 1, # satu, karena tanpa prediktor
data = honors,
family = "binomial") # karena prediksi biner (2 kelas)
summary(honors.logit)
# peluang
table(honors$hon)
# log of odds student honors
logit(49/(151+49))
# log of odds -> odds
exp(-1.12546)
honors.logit2 <- glm(formula = hon ~ female, data = honors, family = "binomial")
summary(honors.logit2)
# proportion
table(female = honors$female, honors = honors$hon)
# peluang
p_female <- 32/(77+32)
p_male <- 17/(17+74)
# odds
o_female <- p_female/(1-p_female)
o_male <- p_male/(1-p_male)
# log of odds
log(o_female/o_male)
log(o_male)
# odds female dapat honors
exp(0.5928)
honors.logit3 <- glm(formula = hon ~ math, data = honors, family = "binomial")
summary(honors.logit3)
# hint: substitusi formula model saja
# log of odds
hon52 <- -9.79394 + 0.15634 * 52
hon53 <- -9.79394 + 0.15634 * 53
hon53-hon52 # ini masih log of odds
# log of odds -> odds
exp(0.15634)
honors.logit4 <- glm(hon ~ female + math, data = honors, family = "binomial")
summary(honors.logit4)
# female
exp(0.96531)
# math
exp(0.16422)
# log of odds
lo_husain <- -10.80595 + 0.96531 * 0 + 0.16422 * 60
lo_husain
# peluang
inv.logit(lo_husain)
# log of odds
lo_nabilah <- -10.80595 + 0.96531 * 1 + 0.16422 * 80
lo_nabilah
# peluang
inv.logit(lo_nabilah)
ifelse((-10.80595 + 0.96531 * 0 + 0.16422 * 69)>0.5,"LULUS","TIDAK")
# log of odds (contoh untuk model honors.logit3, student dengan nilai math 52)
hon52
# peluang
# gunakan inv.logit() dari package gtools untuk mengubah log of odds -> peluang
inv.logit(hon52)
# klasifikasi; set threshold 0.5
ifelse(0.159191 > 0.5, "honors", "non-honors")
summary(honors.logit4)
honors.logit$aic # wo/ predictor
honors.logit2$aic # w/ female
honors.logit3$aic # w/ math
honors.logit4$aic # w/ female + math
# null deviance
honors.logit$null.deviance
# residual deviance
honors.logit$deviance # wo/ predictor
honors.logit2$deviance # w/ female
honors.logit3$deviance # w/ math
honors.logit4$deviance # w/ female + math
honors.logit5 <- ...
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = "binomial")
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = 'binomial')
"
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = "binomial")
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = "binomial")
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = "binomial")
honors.logit5
honors.logit5
honors.logit5 <- glm(formula = hon ~ . , data = honors, family = "binomial")
honors.logit5
# log of odds -> odds
exp(48.13764)
table(honors$hon, honors$write)
plot(honors$hon, honors$write)
# log of odds -> odds
exp(36.30917)
# revisi model
honors.logit6 <- glm(formula = hon ~ female + read+ math, data = honors, family = 'binomial' )
summary(honors.logit6 )
# revisi model
head(honors, n=10)
honors.logit6 <- glm(formula = hon ~ female + read+ math, data = honors, family = 'binomial' )
summary(honors.logit6 )
flight <- read.csv("data_input/flight_sm.csv") %>%
mutate(DepDel15 = as.factor(DepDel15))
glimpse(flight)
str(flight)
glimpse(flight)
glimpse(flight)
flight.model <- glm(formula = DepDel15 ~ Month + DayofWeek , data = flight, family = "binomial")
flight.model <- glm(formula = DepDel15 ~ Month + DayofWeek , data = flight, family = "binomial")
summary(flight.model)
exp(-0.060895)
inv.logit(-0.060895)
exp(-0.060895)
inv.logit(-0.060895)
exp(-0.004576)
inv.logit(-0.004576)
vif(flight.model)
library(car)
vif(flight.model)
flight$DayofMonth <- as.factor(flight$DayofMonth)
flight$Month <- as.factor(flight$Month)
flight.model <- glm(formula = DepDel15 ~ Month + DayofWeek , data = flight, family = "binomial")
summary(flight.model)
unique(flight$Month)
loans <- read.csv("data_input/loan2017Q4.csv", stringsAsFactors = T)
glimpse(loans)
loans <- loans %>%
select(-c(grdCtoA, verification_status, log_inc)) %>%
mutate(
not_paid = as.factor(not_paid),
verified = as.factor(verified)
)
glimpse(loans)
colSums(is.na(loans))
# explore with summary
summary(loans)
# numeric predictor vs target variable
plot(loans$not_paid, loans$dti)
table(loans$not_paid)
sample(c("Janu","Kiki","Sayid","Ani"),2)
sample(c("Janu","Kiki","Sayid","Ani"),2)
sample(c("Janu","Kiki","Sayid","Ani"),2)
sample(c("Janu","Kiki","Sayid","Ani"),2)
sample(c("Janu","Kiki","Sayid","Ani"),2)
sample(c("Janu","Kiki","Sayid","Ani"),set.seed(417))
sample(c("Janu","Kiki","Sayid","Ani"),2)
RNGkind(sample.kind = "Rounding") # tambahan khusus u/ R 3.6 ke atas
set.seed(417) # mengunci random number yang dipilih
sample(c("Janu","Kiki","Sayid","Ani"),2)
# index sampling
# splitting
loans.train <-
loans.test <-
RNGkind(sample.kind = "Rounding") # tambahan khusus u/ R 3.6 ke atas
set.seed(417) # mengunci random number yang dipilih
sample(c("Janu","Kiki","Sayid","Ani"),set.seed(417))
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(13452345) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(13452345) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# # intuisi set seed: mengunci random number kita
set.seed(417) # pakai set.seed -> random number dikunci, hasil sampling selalu sama
sample(c("Janu", "Kiki", "Sayyid", "Ani"), 2)
# index sampling
sample(nrow(loans), nrow(loans)*0.8)
RNGkind(sample.kind = "Rounding") # tambahan khusus u/ R 3.6 ke atas
set.seed(417) # mengunci random number yang dipilih
# index sampling
index<-sample(nrow(loans), nrow(loans)*0.8)
# splitting
loans.train <- loans[index,]
loans.test <- loans[-index]
RNGkind(sample.kind = "Rounding") # tambahan khusus u/ R 3.6 ke atas
set.seed(417) # mengunci random number yang dipilih
# index sampling
index<-sample(nrow(loans), nrow(loans)*0.8)
# splitting
loans.train <- loans[index,]
loans.test <- loans[-index,]
# re-check class imbalance
table(loans.train$not_paid)
# re-check class imbalance
table(loans.train$not_paid)
table(loans.test$not_paid)
model.loans <- glm(formula = not_paid ~ 1, data = loans.train, family = "binomial")
summary(model.loans)
head(loans.train, n=10)
model.loans <- glm(formula = not_paid ~ verified+grade, data = loans.train, family = "binomial")
model.loans <- glm(formula = not_paid ~ verified+grade, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ annual_inc+int_rate, data = loans.train, family = "binomial")
model.loans <- glm(formula = not_paid ~ annual_inc+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ initial_list_status+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ purpose+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ home_ownership+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ dti+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ annual_inc+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ home_ownership+annual_inc+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+home_ownership, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+int_rate, data = loans.train, family = "binomial")
summary(model.loans)
# lihat hasil prediksi
loans.test %>%
select(not_paid, pred.Risk, pred.Label) %>%
head(6)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+int_rate+delinq_2yrs, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+delinq_2yrs, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+int_rate+delinq_2yrs, data = loans.train, family = "binomial")
summary(model.loans)
model.loans <- glm(formula = not_paid ~ installment+annual_inc+int_rate+delinq_2yrs+grade, data = loans.train, family = "binomial")
summary(model.loans)
flight$DayofMonth <- as.factor(flight$DayofMonth)
flight$Month <- as.factor(flight$Month)
flight.model <- glm(formula = DepDel15 ~ Month + DayofWeek , data = flight, family = "binomial")
summary(flight.model)
unique(flight$Month)
